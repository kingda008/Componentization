plugins {
    id 'com.android.application'
}

android {

    compileSdkVersion rootProject.android.compileSdkVersion
    buildToolsVersion rootProject.android.buildToolsVersion

    defaultConfig {

        applicationId rootProject.android.applicationId
        minSdkVersion rootProject.android.minSdkVersion
        targetSdkVersion rootProject.android.targetSdkVersion
        versionCode rootProject.android.versionCode
        versionName rootProject.android.versionName

//

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildFeatures {
        viewBinding = true
    }
    buildTypes {
        debug{
            buildConfigField 'String','url',getServerUrl("debug")
        }

        release {
            buildConfigField 'String','url',getServerUrl("release")

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    //使用数组形式
    implementation rootProject.depsLibs.baseLib

    implementation project(path: ':ft_login')

//    implementation project(path: ':lib_base')
//    implementation project(path: ':lib_common')

    rootProject.ext.depsLibs.moduleLib.each{
        implementation project(it)
    }

    if (!rootProject.android.isApplication) {
        implementation project(path: ':ft_login')
    }


    testImplementation rootProject.depsLibs.junit
    androidTestImplementation rootProject.depsLibs.test_ext_junit
    androidTestImplementation rootProject.depsLibs.test_espresso
}

//用groovy语法读取配置文件
def getServerUrl(String str){
    def url;
    Properties properties = new Properties()
    def proFile = file('src/main/filters/'+str+"/config.properties")
    if(proFile.canRead()){
        properties.load(new FileInputStream(proFile));
        if(properties!=null){
            url = properties['SERVER2']
        }
    }

    url
}

